sum(x > man_threshold) >= samples_cutoff})
table(idx_man_threshold)
palmieri_manfiltered <- subset(palmieri_eset_norm, idx_man_threshold)
hist(rowMedians(Biobase::exprs(palmieri_manfiltered)), 100, col = "cornsilk", freq = FALSE,
main = "AT: Histogram of the median intensities of filtered expression data",
border = "antiquewhite4",
xlab = "Median intensities")
par(mfrow=c(1,1))
oligo::boxplot(palmieri_eset_norm, target = "core",
main = "AT: Boxplot of log2-intensitites for the normalized data",
ylab = "")
par(mfrow=c(1,2))
oligo::boxplot(raw_data, target = "core",
main = "AT: Boxplot of log2-intensitites for the raw data")
palmieri_eset_norm <- oligo::normalize(raw_data)
oligo::boxplot(palmieri_eset_norm, target = "core",
main = "AT: Boxplot of log2-intensitites for the normalized data",
ylab = "")
par(mfrow=c(1,2))
oligo::boxplot(raw_data, target = "core",
main = "AT: Boxplot of log2-intensitites for the raw data")
palmieri_eset_norm <- oligo::normalize(raw_data)
oligo::boxplot(palmieri_eset_norm, target = "core",
main = "AT: Boxplot of log2-intensitites for the normalized data",
ann = FALSE)
par(mfrow=c(1,2))
oligo::boxplot(raw_data, target = "core",
main = "AT: Boxplot of log2-intensitites for the raw data")
palmieri_eset_norm <- oligo::normalize(raw_data)
oligo::boxplot(palmieri_eset_norm, target = "core",
main = "AT: Boxplot of log2-intensitites for the normalized data")
par(mfrow=c(1,1))
oligo::boxplot(raw_data, target = "core",
main = "AT: Boxplot of log2-intensitites for the raw data")
palmieri_eset_norm <- oligo::normalize(raw_data)
oligo::boxplot(palmieri_eset_norm, target = "core",
main = "AT: Boxplot of log2-intensitites for the normalized data")
par(mfrow=c(1,1))
oligo::boxplot(raw_data, target = "core",
main = "AT: Boxplot of log2-intensitites for the raw data")
palmieri_eset_norm <- oligo::normalize(raw_data)
oligo::boxplot(palmieri_eset_norm, target = "core",
main = "AT: Boxplot of log2-intensitites for the normalized data",
xlab = "")
par(mfrow=c(1,1))
oligo::boxplot(raw_data, target = "core",
main = "AT: Boxplot of log2-intensitites for the raw data")
palmieri_eset_norm <- oligo::normalize(raw_data)
oligo::boxplot(palmieri_eset_norm, target = "core",
main = "AT: Boxplot of log2-intensitites for the normalized data",
ann = FALSE)
par(mfrow=c(1,1))
oligo::boxplot(raw_data, target = "core",
main = "AT: Boxplot of log2-intensitites for the raw data")
palmieri_eset_norm <- oligo::normalize(raw_data)
oligo::boxplot(palmieri_eset_norm, target = "core",
main = "AT: Boxplot of log2-intensitites for the normalized data")
oligo::boxplot(palmieri_eset_norm, target = "core",
main = "AT: Boxplot of log2-intensitites for the normalized data",
xlab = "1")
oligo::boxplot(palmieri_eset_norm, target = "core",
main = "AT: Boxplot of log2-intensitites for the normalized data",
xlab = 1:10)
par(mfrow=c(1,1))
oligo::boxplot(raw_data, target = "core",
main = "AT: Boxplot of log2-intensitites for the raw data")
palmieri_eset_norm <- oligo::normalize(raw_data)
oligo::boxplot(palmieri_eset_norm, target = "core",
main = "AT: Boxplot of log2-intensitites for the normalized data")
fam <- as.character(Biobase::pData(palmieri_manfiltered)$fid)
group <- Biobase::pData(palmieri_manfiltered)$group
design_palmieri <- model.matrix(~ 0 + group + fam)
rownames(design_palmieri) <- Biobase::pData(palmieri_manfiltered)$pid
contrast_matrix <- makeContrasts(groupheavy - grouplean, levels = design_palmieri)
par(mfrow=c(1,2))
v <- voom(palmieri_manfiltered, design_palmieri, plot=TRUE)
vfit <- lmFit(v, design_palmieri)
vfit <- contrasts.fit(vfit, contrasts=contrast_matrix)
efit <- eBayes(vfit)
plotSA(efit, main="AT: Final model: Mean-variance trend")
table_adipose <- topTable(efit, number = Inf, sort.by = "p")
head(table_adipose)
summary(decideTests(efit))
dt <- decideTests(efit)
hist(table_adipose$P.Value, main = "AT: Heavy vs Lean P-values intensities", xlab = "p-values")
signif_genes <- rownames(as.matrix(dt[dt != 0,]))
signif_toptable <- table_adipose[rownames(table_adipose) %in% signif_genes,]
## P-value
pval_min <- min(table_adipose$P.Value)
pval_max <- max(table_adipose$P.Value)
pval_cutoff <- max(signif_toptable$P.Value)
## Adjusted P-value
adjPval_min <- min(table_adipose$adj.P.Val)
adjPval_max <- max(table_adipose$adj.P.Val)
adjPval_cutoff <- max(signif_toptable$adj.P.Val)
#General Bioconductor packages
library(Biobase)
library(oligoClasses)
#Annotation and data import packages
library(ArrayExpress)
library(pd.hg.u133.plus.2)
library(biomaRt)
#Quality control and pre-processing packages
library(oligo)
library(arrayQualityMetrics)
#Analysis and statistics packages
library(limma)
library(topGO)
library(ReactomePA)
library(clusterProfiler)
#Plotting and color options packages
library(gplots)
library(ggplot2)
library(geneplotter)
library(RColorBrewer)
#Formatting/documentation packages
library(dplyr)
library(tidyr)
#Helpers:
library(stringr)
library(matrixStats)
library(genefilter)
library(openxlsx)
library(readxl, writexl)
wdir <- dirname(rstudioapi::getSourceEditorContext()$path)
### Load adipose tissue gene
adipose_tissue_gene <- read_excel(paste(wdir, "/Datasets/MZtwins_whole genome_adipocyte_adipose tissue.xlsx", sep = ""),
sheet = "Adipose Tissue", skip = 4, col_names = FALSE)
### Load adipose tissue gene
adipose_tissue_gene <- read_excel(paste(wdir, "/Datasets/MZtwins_whole genome_adipocyte_adipose tissue.xlsx", sep = ""),
sheet = "Adipose Tissue", skip = 4, col_names = FALSE)
# Family ID
fid = paste0('fam', c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,
1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25))
fid = as.factor(fid)
# Individual ID
pid = paste0('ind', c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,
27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50))
pid = as.factor(pid)
pid = as.factor(pid)
# Group (lean and heavy)
group = as.factor(rep(c('lean','heavy'), each=length(pid)/2))
# Create phenotype data
adipose_tissue_phenoData = data.frame(fid, pid, group)
write.csv(adipose_tissue_phenoData, file = paste(wdir, "/Datasets/adipose_tissue_phenoData.csv", sep=""),
row.names = FALSE)
# Create assay data (some rows removed due to missing supplemental data)
adipose_tissue_assayData = as.data.frame(adipose_tissue_gene[, -c(1, 2)])
rownames(adipose_tissue_assayData) = make.names(adipose_tissue_gene[[1]], unique=TRUE)
colnames(adipose_tissue_assayData) =  paste(adipose_tissue_phenoData$fid, adipose_tissue_phenoData$pid, sep=".")
write.csv(adipose_tissue_assayData, file = paste(wdir, "/Datasets/adipose_tissue_assayData.csv", sep=""),
row.names = TRUE)
### Try to get the annotation data
mart <- useMart(biomart = "ENSEMBL_MART_ENSEMBL", dataset="hsapiens_gene_ensembl")
### Try to get the annotation data
mart <- useMart(biomart = "ENSEMBL_MART_ENSEMBL", dataset="hsapiens_gene_ensembl")
annotations <- getBM(
attributes=c(
'hgnc_symbol',
"ensembl_gene_id",
'description',
"external_gene_name",
'gene_biotype',
'chromosome_name',
"affy_hg_u133_plus_2"
),
filters = 'hgnc_symbol', values = rownames(adipose_tissue_assayData), mart = mart, uniqueRows=TRUE)
annotations <- annotations[match(rownames(adipose_tissue_assayData), annotations$hgnc_symbol), ]
### Get the additional information for each individual
adipose_tissue_featureData = data.frame(geneId = as.factor(adipose_tissue_gene[[1]]),
geneDesc = as.factor(adipose_tissue_gene[[2]]))
write.csv(annotations, file = paste(wdir, "/Datasets/adipose_tissue_featureData.csv", sep=""),
row.names = FALSE)
#General Bioconductor packages
library(Biobase)
library(oligoClasses)
#Annotation and data import packages
library(ArrayExpress)
library(pd.hg.u133.plus.2)
library(biomaRt)
#Quality control and pre-processing packages
library(oligo)
library(arrayQualityMetrics)
#Analysis and statistics packages
library(limma)
library(topGO)
library(ReactomePA)
library(clusterProfiler)
#Plotting and color options packages
library(gplots)
library(ggplot2)
library(geneplotter)
library(RColorBrewer)
#Formatting/documentation packages
library(dplyr)
library(tidyr)
#Helpers:
library(stringr)
library(matrixStats)
library(genefilter)
library(openxlsx)
library(readxl, writexl)
#General Bioconductor packages
library(Biobase)
library(oligoClasses)
#Annotation and data import packages
library(ArrayExpress)
library(pd.hg.u133.plus.2)
library(biomaRt)
#Quality control and pre-processing packages
library(oligo)
library(arrayQualityMetrics)
#Analysis and statistics packages
library(limma)
# library(topGO)
# library(ReactomePA)
# library(clusterProfiler)
#Plotting and color options packages
library(gplots)
library(ggplot2)
# library(geneplotter)
library(RColorBrewer)
#Formatting/documentation packages
library(dplyr)
library(tidyr)
#Helpers:
# library(stringr)
# library(matrixStats)
# library(genefilter)
library(openxlsx)
library(readxl, writexl)
wdir <- dirname(rstudioapi::getSourceEditorContext()$path)
### Load adipose tissue gene
adipose_tissue_gene <- read_excel(paste(wdir, "/Datasets/MZtwins_whole genome_adipocyte_adipose tissue.xlsx", sep = ""),
sheet = "Adipose Tissue", skip = 4, col_names = FALSE)
# Family ID
fid <- paste0('fam', c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,
1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25))
fid <- as.factor(fid)
# Individual ID
pid <- paste0('ind', c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,
27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50))
pid <- as.factor(pid)
# Group (lean and heavy)
group <- as.factor(rep(c('lean','heavy'), each=length(pid)/2))
# Create phenotype data
adipose_tissue_phenoData <- data.frame(fid, pid, group)
write.csv(adipose_tissue_phenoData, file = paste(wdir, "/Datasets/adipose_tissue_phenoData.csv", sep=""),
row.names = FALSE)
# Create assay data
adipose_tissue_assayData <- as.data.frame(adipose_tissue_gene[, -c(1, 2)])
rownames(adipose_tissue_assayData) <- make.names(adipose_tissue_gene[[1]], unique=TRUE)
colnames(adipose_tissue_assayData) <- paste(adipose_tissue_phenoData$fid, adipose_tissue_phenoData$pid, sep=".")
write.csv(adipose_tissue_assayData, file = paste(wdir, "/Datasets/adipose_tissue_assayData.csv", sep=""),
row.names = TRUE)
### Try to get the annotation data
mart <- useMart(biomart = "ENSEMBL_MART_ENSEMBL", dataset="hsapiens_gene_ensembl")
annotations <- getBM(
attributes=c(
'hgnc_symbol',
"ensembl_gene_id",
'description',
"external_gene_name",
'gene_biotype',
'chromosome_name',
"affy_hg_u133_plus_2"
),
filters = 'hgnc_symbol', values = rownames(adipose_tissue_assayData), mart = mart, uniqueRows=TRUE)
annotations <- annotations[match(rownames(adipose_tissue_assayData), annotations$hgnc_symbol), ]
### Get the additional information for each individual
adipose_tissue_featureData <- data.frame(geneId = as.factor(adipose_tissue_gene[[1]]),
geneDesc = as.factor(adipose_tissue_gene[[2]]))
write.csv(annotations, file = paste(wdir, "/Datasets/adipose_tissue_featureData.csv", sep=""),
row.names = FALSE)
assayData <- read.csv(paste(wdir, "/Datasets/adipose_tissue_assayData.csv", sep=""), row.names=1)
assayData <- as.matrix(assayData)
adipose_tissue_phenoData <- read.csv(paste(wdir, "/Datasets/adipose_tissue_phenoData.csv", sep=""))
rownames(adipose_tissue_phenoData) = colnames(assayData)
metadata <- data.frame(labelDescription=
c("Family Id",
"Individual Id",
"Case/control status"),
row.names=c("fid", "pid", "group"))
phenoData <- new("AnnotatedDataFrame", data=adipose_tissue_phenoData, varMetadata=metadata)
adipose_tissue_featureData <- read.csv(paste(wdir, "/Datasets/adipose_tissue_featureData.csv", sep=""))
rownames(adipose_tissue_featureData) = rownames(assayData)
featureData <- new("AnnotatedDataFrame", data=adipose_tissue_featureData)
raw_data  <- new("ExpressionSet", exprs = assayData, phenoData = phenoData,
featureData = featureData,
annotation="pd.hg.u133.plus.2")
par(mfrow=c(2,1))
oligo::boxplot(raw_data, target = "core",
main = "AT: Boxplot of log2-intensitites for the raw data")
palmieri_eset_norm <- oligo::normalize(raw_data)
oligo::boxplot(palmieri_eset_norm, target = "core",
main = "AT: Boxplot of log2-intensitites for the normalized data")
par(mfrow=c(1,2))
oligo::boxplot(raw_data, target = "core",
main = "AT: Boxplot of log2-intensitites for the raw data")
palmieri_eset_norm <- oligo::normalize(raw_data)
oligo::boxplot(palmieri_eset_norm, target = "core",
main = "AT: Boxplot of log2-intensitites for the normalized data")
par(mfrow=c(1,1))
oligo::boxplot(raw_data, target = "core",
main = "AT: Boxplot of log2-intensitites for the raw data")
palmieri_eset_norm <- oligo::normalize(raw_data)
oligo::boxplot(palmieri_eset_norm, target = "core",
main = "AT: Boxplot of log2-intensitites for the normalized data")
par(mfrow=c(2,1))
palmieri_medians <- rowMedians(Biobase::exprs(palmieri_eset_norm))
man_threshold <- 3
hist_res <- hist(palmieri_medians, 100, col = "cornsilk", freq = FALSE,
main = "AT: Histogram of the median intensities of unfiltered expression data",
border = "antiquewhite4",
xlab = "Median intensities")
abline(v = man_threshold, col = "coral4", lwd = 2)
no_of_samples <- table(pData(palmieri_eset_norm)$group)
samples_cutoff <- min(no_of_samples)
idx_man_threshold <- apply(Biobase::exprs(palmieri_eset_norm), 1,
function(x){
sum(x > man_threshold) >= samples_cutoff})
palmieri_manfiltered <- subset(palmieri_eset_norm, idx_man_threshold)
hist(rowMedians(Biobase::exprs(palmieri_manfiltered)), 100, col = "cornsilk", freq = FALSE,
main = "AT: Histogram of the median intensities of filtered expression data",
border = "antiquewhite4",
xlab = "Median intensities")
fam <- as.character(Biobase::pData(palmieri_manfiltered)$fid)
group <- Biobase::pData(palmieri_manfiltered)$group
design_palmieri <- model.matrix(~ 0 + group + fam)
rownames(design_palmieri) <- Biobase::pData(palmieri_manfiltered)$pid
head(design_palmieri, n = 5)
fam <- as.character(Biobase::pData(palmieri_manfiltered)$fid)
group <- Biobase::pData(palmieri_manfiltered)$group
design_palmieri <- model.matrix(~ 0 + group + fam)
rownames(design_palmieri) <- Biobase::pData(palmieri_manfiltered)$pid
contrast_matrix <- m(groupheavy - grouplean, levels = design_palmieri)
contrast_matrix <- makeContrasts(groupheavy - grouplean, levels = design_palmieri)
par(mfrow=c(1,2))
v <- voom(palmieri_manfiltered, design_palmieri, plot=TRUE)
vfit <- lmFit(v, design_palmieri)
vfit <- contrasts.fit(vfit, contrasts=contrast_matrix)
efit <- eBayes(vfit)
plotSA(efit, main="AT: Final model: Mean-variance trend")
par(mfrow=c(1,2))
v <- voom(palmieri_manfiltered, design_palmieri, plot=TRUE)
par(mfrow=c(1,2))
v <- voom(palmieri_manfiltered, design_palmieri, plot=TRUE)
vfit <- lmFit(v, design_palmieri)
vfit <- contrasts.fit(vfit, contrasts=contrast_matrix)
efit <- eBayes(vfit)
plotSA(efit, main="AT: Final model: Mean-variance trend")
table_adipose <- topTable(efit, number = Inf, sort.by = "adj.P.Val")
table_adipose <- topTable(efit, number = Inf, sort.by = "p")
head(table_adipose)
summary(decideTests(efit))
dt <- decideTests(efit)
hist(table_adipose$adj.P.Val.Value, main = "AT: Heavy vs Lean P-values intensities", xlab = "p-values")
table_adipose <- topTable(efit, number = Inf, sort.by = "p")
head(table_adipose)
summary(decideTests(efit))
dt <- decideTests(efit)
hist(table_adipose$P.Value, main = "AT: Heavy vs Lean P-values intensities", xlab = "p-values")
View(table_adipose)
table_adipose <- topTable(efit, number = Inf, sort.by = "p")
head(table_adipose)
summary(decideTests(efit))
dt <- decideTests(efit)
hist(table_adipose$adj.P.Val, main = "AT: Heavy vs Lean P-values intensities", xlab = "p-values")
hist(table_adipose$P.Value, main = "AT: Heavy vs Lean P-values intensities", xlab = "p-values")
table_adipose <- topTable(efit, number = Inf, sort.by = "p")
head(table_adipose)
summary(decideTests(efit))
dt <- decideTests(efit)
hist(table_adipose$P.Value, main = "AT: Heavy vs Lean P-values intensities", xlab = "p-values")
hist(table_adipose$adj.P.Val, main = "AT: Heavy vs Lean P-values intensities", xlab = "p-values")
table_adipose <- topTable(efit, number = Inf, sort.by = "p")
head(table_adipose)
summary(decideTests(efit))
dt <- decideTests(efit)
hist(table_adipose$adj.P.Val, main = "AT: Heavy vs Lean P-values intensities", xlab = "p-values")
table_adipose <- topTable(efit, number = Inf, sort.by = "p")
head(table_adipose)
dt <- decideTests(efit)
summary(dt)
hist(table_adipose$adj.P.Val, main = "AT: Heavy vs Lean P-values intensities", xlab = "p-values")
signif_genes <- rownames(as.matrix(dt[dt != 0,]))
signif_toptable <- table_adipose[rownames(table_adipose) %in% signif_genes,]
## P-value
pval_min <- min(table_adipose$P.Value)
pval_max <- max(table_adipose$P.Value)
pval_cutoff <- max(signif_toptable$P.Value)
## Adjusted P-value
adjPval_min <- min(table_adipose$adj.P.Val)
adjPval_max <- max(table_adipose$adj.P.Val)
adjPval_cutoff <- max(signif_toptable$adj.P.Val)
View(signif_toptable)
#General Bioconductor packages
library(Biobase)
library(oligoClasses)
#Annotation and data import packages
library(ArrayExpress)
library(pd.hg.u133.plus.2)
library(biomaRt)
#Quality control and pre-processing packages
library(oligo)
library(arrayQualityMetrics)
#Analysis and statistics packages
library(limma)
# library(topGO)
# library(ReactomePA)
# library(clusterProfiler)
#Plotting and color options packages
library(gplots)
library(ggplot2)
# library(geneplotter)
library(RColorBrewer)
#Formatting/documentation packages
library(dplyr)
library(tidyr)
#Helpers:
# library(stringr)
# library(matrixStats)
# library(genefilter)
library(openxlsx)
library(readxl, writexl)
wdir <- dirname(rstudioapi::getSourceEditorContext()$path)
### Load adipose tissue gene
adipose_tissue_gene <- read_excel(paste(wdir, "/Datasets/MZtwins_whole genome_adipocyte_adipose tissue.xlsx", sep = ""),
sheet = "Adipose Tissue", skip = 4, col_names = FALSE)
assayData <- read.csv(paste(wdir, "/Datasets/adipose_tissue_assayData.csv", sep=""), row.names=1)
assayData <- as.matrix(assayData)
adipose_tissue_phenoData <- read.csv(paste(wdir, "/Datasets/adipose_tissue_phenoData.csv", sep=""))
rownames(adipose_tissue_phenoData) = colnames(assayData)
metadata <- data.frame(labelDescription=
c("Family Id",
"Individual Id",
"Case/control status"),
row.names=c("fid", "pid", "group"))
phenoData <- new("AnnotatedDataFrame", data=adipose_tissue_phenoData, varMetadata=metadata)
adipose_tissue_featureData <- read.csv(paste(wdir, "/Datasets/adipose_tissue_featureData.csv", sep=""))
rownames(adipose_tissue_featureData) = rownames(assayData)
featureData <- new("AnnotatedDataFrame", data=adipose_tissue_featureData)
raw_data  <- new("ExpressionSet", exprs = assayData, phenoData = phenoData,
featureData = featureData,
annotation="pd.hg.u133.plus.2")
oligo::boxplot(raw_data, target = "core",
main = "AT: Boxplot of log2-intensitites for the raw data")
palmieri_eset_norm <- oligo::normalize(raw_data)
oligo::boxplot(palmieri_eset_norm, target = "core",
main = "AT: Boxplot of log2-intensitites for the normalized data")
par(mfrow=c(2,1))
palmieri_medians <- rowMedians(Biobase::exprs(palmieri_eset_norm))
man_threshold <- 3
hist_res <- hist(palmieri_medians, 100, col = "cornsilk", freq = FALSE,
main = "AT: Histogram of the median intensities of unfiltered expression data",
border = "antiquewhite4",
xlab = "Median intensities")
abline(v = man_threshold, col = "coral4", lwd = 2)
no_of_samples <- table(pData(palmieri_eset_norm)$group)
samples_cutoff <- min(no_of_samples)
idx_man_threshold <- apply(Biobase::exprs(palmieri_eset_norm), 1,
function(x){
sum(x > man_threshold) >= samples_cutoff})
palmieri_manfiltered <- subset(palmieri_eset_norm, idx_man_threshold)
hist(rowMedians(Biobase::exprs(palmieri_manfiltered)), 100, col = "cornsilk", freq = FALSE,
main = "AT: Histogram of the median intensities of filtered expression data",
border = "antiquewhite4",
xlab = "Median intensities")
fam <- as.character(Biobase::pData(palmieri_manfiltered)$fid)
group <- Biobase::pData(palmieri_manfiltered)$group
design_palmieri <- model.matrix(~ 0 + group + fam)
rownames(design_palmieri) <- Biobase::pData(palmieri_manfiltered)$pid
contrast_matrix <- makeContrasts(groupheavy - grouplean, levels = design_palmieri)
par(mfrow=c(1,2))
v <- voom(palmieri_manfiltered, design_palmieri, plot=TRUE)
dupfit <- duplicateCorrelation(v, design, block=fam)
fam <- as.character(Biobase::pData(palmieri_manfiltered)$fid)
group <- Biobase::pData(palmieri_manfiltered)$group
design <- model.matrix(~ 0 + group + fam)
rownames(design) <- Biobase::pData(palmieri_manfiltered)$pid
contrast_matrix <- makeContrasts(groupheavy - grouplean, levels = design)
par(mfrow=c(1,2))
v <- voom(palmieri_manfiltered, design, plot=TRUE)
dupfit <- duplicateCorrelation(v, design, block=fam)
vfit <- lmFit(dupfit, design_palmieri)
par(mfrow=c(1,2))
v <- voom(palmieri_manfiltered, design, plot=TRUE)
dupfit <- duplicateCorrelation(v, design, block=fam)
vfit <- lmFit(v, design, correlation=dupfit$consensus, block = fam)
contrastfit <- contrasts.fit(vfit, contrasts=contrast_matrix)
efit <- eBayes(contrastfit)
plotSA(efit, main="AT: Final model: Mean-variance trend")
par(mfrow=c(1,2))
v <- voom(palmieri_manfiltered, design, plot=TRUE)
dupfit <- duplicateCorrelation(v, design)
par(mfrow=c(1,2))
v <- voom(palmieri_manfiltered, design, plot=TRUE)
dupfit <- duplicateCorrelation(v, design, block=fam)
vfit <- lmFit(v, design, correlation=dupfit$consensus, block = fam)
contrastfit <- contrasts.fit(vfit, contrasts=contrast_matrix)
efit <- eBayes(contrastfit)
plotSA(efit, main="AT: Final model: Mean-variance trend")
par(mfrow=c(1,2))
v <- voom(palmieri_manfiltered, design, plot=TRUE)
dupfit <- duplicateCorrelation(v, design)
par(mfrow=c(1,2))
v <- voom(palmieri_manfiltered, design, plot=TRUE)
dupfit <- duplicateCorrelation(v, design, block=fam)
vfit <- lmFit(v, design, correlation=dupfit$consensus, block = fam)
contrastfit <- contrasts.fit(vfit, contrasts=contrast_matrix)
efit <- eBayes(contrastfit)
plotSA(efit, main="AT: Final model: Mean-variance trend")
